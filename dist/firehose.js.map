{"version":3,"sources":["webpack:///./helpers/webpack.coffee","webpack:///./lib/index.js","webpack:///./lib/firehose/index.coffee","webpack:///./package.json","webpack:///./lib/firehose/consumer.coffee","webpack:///./lib/firehose/web_socket_transport.coffee","webpack:///./lib/firehose/transport.coffee","webpack:///./lib/firehose/long_poll_transport.coffee","webpack:///./lib/firehose/multiplexed_consumer.coffee","webpack:///./lib/firehose/multiplexed_web_socket.coffee","webpack:///./lib/firehose/multiplexed_long_poll.coffee"],"names":[],"mappings":"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","file":"firehose.js","sourcesContent":["window.$ = window.jQuery = require \"jquery\"\n\n$(window)\n\nwindow.Firehose = require \"../lib/index.js\"\n\n\n\n/** WEBPACK FOOTER **\n ** ./helpers/webpack.coffee\n **/","var __VERSION__ = null;\n\nif (\"webpack\" != process.env.NODE_ENV) {\n  require(\"coffee-script/register\");\n  __VERSION__ = require(\"../helpers/node\").version\n}\n\nexports = module.exports = require(\"./firehose\");\nexports.version = __VERSION__;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/index.js\n ** module id = 2\n ** module chunks = 0\n **/","module.exports =\n  version: require(\"../../package.json\").version\n  codeName: require(\"../../package.json\").codeName\n  Consumer: require \"./consumer\"\n  LongPollTransport: require \"./long_poll_transport\"\n  MultiplexedConsumer: require \"./multiplexed_consumer\"\n  MultiplexedLongPoll: require \"./multiplexed_long_poll\"\n  Transport: require \"./transport\"\n  WebSocketTransport: require \"./web_socket_transport\"\n  MultiplexedWebSocket: require \"./multiplexed_web_socket\"\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/firehose/index.coffee\n **/","module.exports = {\n\t\"name\": \"firehose-client\",\n\t\"version\": \"1.0.3\",\n\t\"codeName\": \"Jingle All the Way\",\n\t\"main\": \"lib/index.js\",\n\t\"scripts\": {\n\t\t\"build\": \"webpack -p\",\n\t\t\"build:watch\": \"webpack --watch\",\n\t\t\"test\": \"JASMINE_CONFIG_PATH=./spec/javascripts/support/jasmine.json jasmine\"\n\t},\n\t\"devDependencies\": {\n\t\t\"clean-webpack-plugin\": \"^0.1.9\",\n\t\t\"codo\": \"git://github.com/coffeedoc/codo.git\",\n\t\t\"coffee-loader\": \"^0.7.2\",\n\t\t\"coffeelint\": \"^1.14.0\",\n\t\t\"coffeelint-function-call-whitespace\": \"^0.1.3\",\n\t\t\"coffeelint-prefer-double-quotes\": \"^0.1.0\",\n\t\t\"coffeelint-prefer-symbol-operator\": \"^0.1.1\",\n\t\t\"jasmine\": \"^2.4.1\",\n\t\t\"json-loader\": \"^0.5.4\",\n\t\t\"sinon\": \"^1.17.4\",\n\t\t\"webpack\": \"^1.13.1\"\n\t},\n\t\"dependencies\": {\n\t\t\"coffee-script\": \"^1.10.0\",\n\t\t\"jquery\": \"^2.2.4\",\n\t\t\"jsdom\": \"^9.2.1\",\n\t\t\"ws\": \"^1.1.0\",\n\t\t\"xmlhttprequest\": \"^1.8.0\"\n\t},\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"git://github.com/firehoseio/js_client.git\"\n\t}\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./package.json\n ** module id = 4\n ** module chunks = 0\n **/","WebSocketTransport = require \"./web_socket_transport\"\nLongPollTransport = require \"./long_poll_transport\"\n\nclass Consumer\n  constructor: (@config = {}) ->\n    # Empty handler for messages.\n    @config.message      ||= ->\n    # Empty handler for error handling.\n    @config.error        ||= ->\n    # Empty handler for when we establish a connection.\n    @config.connected    ||= ->\n    # Empty handler for when we're disconnected.\n    @config.disconnected ||= ->\n    # The initial connection failed. This is probably triggered when a\n    # transport, like WebSockets is supported by the browser, but for whatever\n    # reason it can't connect (probably a firewall)\n    @config.failed       ||= ->\n      throw \"Could not connect\"\n    # gets thrown if a subscription request failed\n    @config.subscriptionFailed ||= ->\n    # Params that we'll tack on to the URL.\n    @config.params       ||= {}\n    # Do stuff before we send the message into config.message. The sensible\n    # default on the webs is to parse JSON.\n    @config.parse        ||= JSON.parse\n\n    @_isConnected = false\n    origConnected = @config.connected\n    @config.connected = =>\n      @_isConnected = true\n      origConnected()\n\n    # Make sure we return ourself out of the constructor so we can chain.\n    this\n\n  connected: =>\n    @_isConnected\n\n  websocketTransport: (config) =>\n    new WebSocketTransport(config)\n\n  longpollTransport: (config) =>\n    new LongPollTransport(config)\n\n  connect: (delay=0) =>\n    promise = @_connectPromise()\n\n    @config.connectionVerified = @_upgradeTransport\n    if WebSocketTransport.supported()\n      @upgradeTimeout = setTimeout =>\n        ws = @websocketTransport(@config)\n        ws.connect delay\n      , 500\n    @transport = @longpollTransport(@config)\n    @transport.connect delay\n\n    promise\n\n  stop: =>\n    if @upgradeTimeout?\n      clearTimeout @upgradeTimeout\n      @upgradeTimeout = null\n    @transport.stop()\n    return\n\n  _upgradeTransport: (ws) =>\n    @transport.stop()\n    ws.sendStartingMessageSequence @transport.getLastMessageSequence()\n    @transport = ws\n    return\n\n  # Return a promise that will succeed/fail depending on whether or not the\n  # initial connection succeeds.\n  _connectPromise: =>\n    deferred = $.Deferred()\n\n    origConnected = @config.connected\n    @config.connected = =>\n      deferred.resolve()\n      if origConnected\n        @config.connected = origConnected\n        origConnected()\n\n  #  origDisconnected = @config.disconnected\n  #  @config.disconnected = =>\n  #    deferred.reject()\n  #    if origDisconnected\n  #      @config.disconnected = origDisconnected\n  #      origDisconnected()\n\n    deferred.promise()\n\nConsumer.multiplexChannel = \"channels@firehose\"\n\nmodule.exports = Consumer\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/firehose/consumer.coffee\n **/","Transport = require \"./transport\"\n\nINITIAL_PING_TIMEOUT   =  2000\nKEEPALIVE_PING_TIMEOUT = 20000\n\nsendPing = (socket) ->\n  socket.send JSON.stringify ping: 'PING'\n\ngetWebSocket = ->\n  window?.WebSocket || global?.WebSocket\n\nclass WebSocketTransport extends Transport\n  name: -> 'WebSocket'\n\n  @ieSupported:-> (document.documentMode || 10) > 9\n  @supported  :-> !!getWebSocket() # Check if WebSocket is an object in the window.\n\n  constructor: (args) ->\n    super args\n    # Configrations specifically for web sockets\n    @config.webSocket ||= {}\n    @config.webSocket.connectionVerified = @config.connectionVerified\n\n  _sendMessage: (message) =>\n    @socket?.send(JSON.stringify message)\n\n  _request: =>\n    # Run this in a try/catch block because IE10 inside of a .NET control\n    # complains about security zones.\n    try\n      ws = getWebSocket()\n      @socket = new ws(\"#{@_protocol()}:#{@config.uri}?#{$.param @_requestParams()}\")\n      @socket.onopen    = @_open\n      @socket.onclose   = @_close\n      @socket.onerror   = @_error\n      @socket.onmessage = @_lookForInitialPong\n    catch err\n      console?.log(err)\n\n  # Protocol schema we should use for talking to firehose server.\n  _protocol: =>\n    if @config.ssl then \"wss\" else \"ws\"\n\n  _requestParams: =>\n    @config.params\n\n  _open: =>\n    sendPing @socket\n\n  _lookForInitialPong: (event) =>\n    @_restartKeepAlive()\n    if @_isPong(try JSON.parse event.data catch e then {})\n      if @_lastMessageSequence?\n        # don't callback to connectionVerified on subsequent reconnects\n        @sendStartingMessageSequence @_lastMessageSequence\n      else @config.webSocket.connectionVerified @\n\n  sendStartingMessageSequence: (message_sequence) =>\n    @_lastMessageSequence = message_sequence\n    @socket.onmessage     = @_message\n    @_sendMessage({message_sequence})\n    @_needToNotifyOfDisconnect = true\n    Transport::_open.call @\n\n  stop: =>\n    @_cleanUp()\n\n  _message: (event) =>\n    frame = @config.parse event.data\n    @_restartKeepAlive()\n\n    if @_isSubscriptionFailed frame\n      return @config.subscriptionFailed frame\n\n    unless @_isPong frame\n      try\n        @_lastMessageSequence = frame.last_sequence\n        @config.message @config.parse frame.message\n      catch e\n\n  _close: (event) =>\n    if event?.wasClean then @_cleanUp()\n    else @_error event\n\n  _error: (event) =>\n    @_cleanUp()\n    if @_needToNotifyOfDisconnect\n      @_needToNotifyOfDisconnect = false\n      @config.disconnected()\n    if @_succeeded\n      @connect @_retryDelay\n    else if @config.failed\n      @config.failed @\n\n  _cleanUp: =>\n    @_clearKeepalive()\n    if @socket?\n      @socket.onopen    = null\n      @socket.onclose   = null\n      @socket.onerror   = null\n      @socket.onmessage = null\n      @socket.close()\n      # delete @socket\n\n  _restartKeepAlive: =>\n    doPing = =>\n      sendPing @socket\n      setNextKeepAlive()\n    setNextKeepAlive = =>\n      @keepaliveTimeout = setTimeout doPing, KEEPALIVE_PING_TIMEOUT\n    @_clearKeepalive()\n    setNextKeepAlive()\n\n  _clearKeepalive: =>\n    if @keepaliveTimeout?\n      clearTimeout @keepaliveTimeout\n      @keepaliveTimeout = null\n\n  _isPong: (o) ->\n    o.pong is 'PONG'\n\n  _isSubscriptionFailed: (o) ->\n    o.error is 'Subscription Failed'\n\nmodule.exports = WebSocketTransport\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/firehose/web_socket_transport.coffee\n **/","class Transport\n  # Class method to determine whether transport is supported by the current browser. Note that while\n  # the transport may be supported by the browser, its possible that the network connection won't\n  # succeed. That should be accounted for during the initial connecting to the server.\n  @supported: =>\n    false\n\n  constructor: (config={}) ->\n    @config = config\n    @config.params ||= {}\n\n    @_retryDelay = 3000\n    @\n\n  # Lets rock'n'roll! Connect to the server.\n  connect: (delay = 0) =>\n    setTimeout @_request, delay\n    this\n\n  # Hey subclasses:\n  name: ->     throw 'not implemented in base Transport' # implement this to identify transport type\n  stop: ->     throw 'not implemented in base Transport' # implement this to stop receiving messages\n  _request: -> throw 'not implemented in base Transport' # implement this to handle requests\n\n  # Default error handler\n  _error: (event) =>\n    if @_succeeded\n      # Lets try to connect again with delay\n      @config.disconnected()\n      @connect(@_retryDelay)\n    else @config.failed @\n\n  # Default connection established handler\n  _open: (event) =>\n    @_succeeded = true\n    @config.connected(@)\n\n  # Default connection closed handler\n  _close: (event) =>\n    @config.disconnected()\n\n  # Useful for reconnecting after any networking hiccups\n  getLastMessageSequence: =>\n    @_lastMessageSequence or 0\n\nmodule.exports = Transport\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/firehose/transport.coffee\n **/","Transport = require \"./transport\"\n\nclass LongPollTransport extends Transport\n  messageSequenceHeader: 'Pragma'\n  name: -> 'LongPoll'\n\n  # CORS is kinda supported in IE8+ except that its implementation cannot\n  # access \"simple request\" response headers. This means we don't yet have a\n  # plan to support IE<10 (when it gets a real XHR2 implementation). Sucks...\n  # $.browser.msie and parseInt($.browser.version) >= 8 # DEPRECATED\n  @ieSupported: -> (document.documentMode || 10) >= 8\n\n  @supported: ->\n    # IE 8+, FF 3.5+, Chrome 4+, Safari 4+, Opera 12+, iOS 3.2+, Android 2.1+\n    if xhr = $.ajaxSettings.xhr()\n      \"withCredentials\" of xhr || LongPollTransport.ieSupported()\n\n  constructor: (args) ->\n    super args\n\n    @config.ssl ?= false\n\n    # Configrations specifically for long polling\n    @config.longPoll         ||= {}\n    @config.longPoll.url     ||= \"#{@_protocol()}:#{@config.uri}\"\n    # How many ms should we wait before timing out the AJAX connection?\n    @config.longPoll.timeout ||= 25000\n    # TODO - What is @_lagTime for? Can't we just use the @_timeout value?\n    # We use the lag time to make the client live longer than the server.\n    @_lagTime                  = 5000\n    @_timeout                  = @config.longPoll.timeout + @_lagTime\n    @_okInterval               = @config.okInterval || 0\n    @_stopRequestLoop          = false\n    @_lastMessageSequence      = 0\n\n  # Protocol schema we should use for talking to firehose server.\n  _protocol: =>\n    if @config.ssl then \"https\" else \"http\"\n\n  _request: =>\n    return if @_stopRequestLoop\n    # Set the Last Message Sequence in a query string.\n    # Ideally we'd use an HTTP header, but android devices don't let us\n    # set any HTTP headers for CORS requests.\n    data = @_requestParams()\n    data.last_message_sequence = @_lastMessageSequence\n    # TODO: Some of these options will be deprecated in jQuery 1.8\n    #       See: http://api.jquery.com/jQuery.ajax/#jqXHR\n    @_lastRequest = $.ajax\n      url:          @config.longPoll.url\n      firehose:     true\n      crossDomain:  true\n      data:         data\n      timeout:      @_timeout\n      success:      @_success\n      error:        @_error\n      cache:        false\n\n  _requestParams: =>\n    @config.params\n\n  stop: =>\n    @_stopRequestLoop = true\n    if @_lastRequest?\n      try @_lastRequest.abort() catch e\n      delete @_lastRequest\n    if @_lastPingRequest?\n      try @_lastPingRequest.abort() catch e\n      delete @_lastPingRequest\n\n  _success: (data, status, jqXhr) =>\n    if @_needToNotifyOfReconnect or not @_succeeded\n      @_needToNotifyOfReconnect = false\n      @_open data\n    return if @_stopRequestLoop\n    if jqXhr.status is 200\n      # Of course, IE's XDomainRequest doesn't support non-200 success codes.\n      try\n        {message, last_sequence} = JSON.parse jqXhr.responseText\n        @_lastMessageSequence    = last_sequence || 0\n        @config.message @config.parse message\n      catch e\n    @connect @_okInterval\n\n  _ping: =>\n    # Ping long poll server to verify internet connectivity\n    # jQuery CORS doesn't support timeouts and there is no way to access xhr2 object\n    # directly so we can't manually set a timeout.\n    @_lastPingRequest = $.ajax\n      url:          @config.uri\n      method:       'HEAD'\n      crossDomain:  true\n      firehose:     true\n      data:         @_requestParams()\n      success:      =>\n        if @_needToNotifyOfReconnect\n          @_needToNotifyOfReconnect = false\n          @config.connected @\n\n  # We need this custom handler to have the connection status\n  # properly displayed\n  _error: (jqXhr, status, error) =>\n    if jqXhr.status == 500\n      error = JSON.parse jqXhr.responseText\n      if error.error == 'Subscription failed'\n        @config.subscriptionFailed(error)\n\n    unless @_needToNotifyOfReconnect or @_stopRequestLoop\n      @_needToNotifyOfReconnect = true\n      @config.disconnected()\n    unless @_stopRequestLoop\n      # Ping the server to make sure this isn't a network connectivity error\n      setTimeout @_ping, @_retryDelay + @_lagTime\n      # Reconnect with delay\n      setTimeout @_request, @_retryDelay\n\nmodule.exports = LongPollTransport\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/firehose/long_poll_transport.coffee\n **/","Consumer = require \"./consumer\"\nMultiplexedWebSocket = require \"./multiplexed_web_socket\"\nMultiplexedLongPoll = require \"./multiplexed_long_poll\"\n\nclass MultiplexedConsumer extends Consumer\n  @subscriptionQuery: (config) ->\n    {\n      subscribe: [\n        \"#{channel}!#{opts.last_sequence || 0}\" for channel, opts of config.channels\n      ].join(\",\")\n    }\n\n  @normalizeChannels: (config) ->\n    for chan, opts of config.channels\n      if chan[0] != \"/\"\n        delete config.channels[chan]\n        config.channels[\"/\" + chan] = opts\n\n  @normalizeChannel: (channel) ->\n    if channel[0] != \"/\"\n      return \"/\" + channel\n    else\n      return channel\n\n  constructor: (@config = {}) ->\n    @messageHandlers = {}\n    @config.message ||= @message\n    @config.channels ||= {}\n    @config.uri += Consumer.multiplexChannel\n\n    @_updateSubscriptions()\n\n    for channel, opts of @config.channels\n      @_addSubscriptionHandler(channel, opts)\n\n    super(@config)\n\n  websocketTransport: (config) =>\n    new MultiplexedWebSocket(config)\n\n  longpollTransport: (config) =>\n    new MultiplexedLongPoll(config)\n\n  message: (msg) =>\n    if handler = @messageHandlers[msg.channel]\n      handler(@config.parse msg.message)\n\n  _addSubscriptionHandler: (channel, opts) =>\n    if opts.message\n      @messageHandlers[channel] = opts.message\n\n  _removeSubscriptionHandler: (channelNames...) =>\n    for chan in channelNames\n      delete @messageHandlers[chan]\n\n  _updateSubscriptions: =>\n    MultiplexedConsumer.normalizeChannels(@config)\n\n  subscribe: (channel, opts = {}) =>\n    channel = MultiplexedConsumer.normalizeChannel(channel)\n    @config.channels[channel] = opts\n\n    @_updateSubscriptions()\n    @_addSubscriptionHandler(channel, opts)\n    @transport.subscribe(channel, opts)\n\n  unsubscribe: (channelNames...) =>\n    return unless @connected()\n\n    for channel in channelNames\n      channel = MultiplexedConsumer.normalizeChannel(channel)\n      delete @config.channels[channel]\n\n    @_updateSubscriptions()\n    @_removeSubscriptionHandler(channelNames...)\n    @transport.unsubscribe(channelNames...)\n\nmodule.exports = MultiplexedConsumer\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/firehose/multiplexed_consumer.coffee\n **/","WebSocketTransport = require \"./web_socket_transport\"\n\nclass MultiplexedWebSocket extends WebSocketTransport\n  constructor: (args) ->\n    super args\n\n  subscribe: (channel, opts) =>\n    @_sendMessage\n      multiplex_subscribe:\n        channel: channel\n        message_sequence: opts.last_sequence\n\n  unsubscribe: (channelNames...) =>\n    @_sendMessage\n      multiplex_unsubscribe: channelNames\n\n  getLastMessageSequence: =>\n    @_lastMessageSequence or {}\n\n  _open: =>\n    super()\n    for channel, opts of @config.channels\n      if @_lastMessageSequence\n        opts.last_sequence = @_lastMessageSequence[channel]\n\n      unless opts.last_sequence\n        opts.last_sequence = 0\n\n      @subscribe channel, opts\n\n  _message: (event) =>\n    frame = @config.parse event.data\n    @_restartKeepAlive()\n    unless @_isPong frame\n      try\n        @_lastMessageSequence ||= {}\n        @_lastMessageSequence[frame.channel] = frame.last_sequence\n        @config.message frame\n      catch e\n\nmodule.exports = MultiplexedWebSocket\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/firehose/multiplexed_web_socket.coffee\n **/","LongPollTransport = require \"./long_poll_transport\"\n\nclass MultiplexedLongPoll extends LongPollTransport\n  constructor: (args) ->\n    super args\n    @_lastMessageSequence = {}\n\n  subscribe: (channel, opts) =>\n    # nothing to be done\n\n  unsubscribe: (channelNames...) =>\n    # same here\n\n  _request: =>\n    return if @_stopRequestLoop\n    data = @_subscriptions()\n\n    @_lastRequest = $.ajax\n      url:          @config.uri\n      firehose:     true\n      crossDomain:  true\n      method:       \"POST\"\n      data:         data\n      dataType:     \"json\"\n      timeout:      @_timeout\n      success:      @_success\n      error:        @_error\n      cache:        false\n\n  _updateLastMessageSequences: =>\n    for channel, opts of @config.channels\n      if seq = @_lastMessageSequence[channel]\n        opts.last_sequence = seq\n      else\n        unless opts.last_sequence\n          opts.last_sequence = 0\n\n  _subscriptions: =>\n    @_updateLastMessageSequences()\n    subs = {}\n    for channel, opts of @config.channels\n      subs[channel] = opts.last_sequence || 0\n    JSON.stringify(subs)\n\n  _success: (data, status, jqXhr) =>\n    if @_needToNotifyOfReconnect or not @_succeeded\n      @_needToNotifyOfReconnect = false\n      @_open data\n    return if @_stopRequestLoop\n    if jqXhr.status is 200\n      # Of course, IE's XDomainRequest doesn't support non-200 success codes.\n      try\n        message = JSON.parse jqXhr.responseText\n        @_lastMessageSequence ||= {}\n        @_lastMessageSequence[message.channel] = message.last_sequence\n        @config.message message\n      catch e\n    @connect @_okInterval\n\nmodule.exports = MultiplexedLongPoll\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/firehose/multiplexed_long_poll.coffee\n **/"],"sourceRoot":""}